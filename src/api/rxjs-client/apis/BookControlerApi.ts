// tslint:disable
/**
 * Zigzag.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';
import type { OperationOpts, HttpHeaders } from '../runtime';
import type {
    AddBookCommand,
    UpdateBookCommand,
} from '../models';

export interface ApiBooksIdDeleteRequest {
    id: string;
}

export interface ApiBooksIdGetRequest {
    id: string;
}

export interface ApiBooksIdPutRequest {
    id: string;
    updateBookCommand?: UpdateBookCommand;
}

export interface ApiBooksPostRequest {
    addBookCommand?: AddBookCommand;
}

/**
 * no description
 */
export class BookControlerApi extends BaseAPI {

    /**
     */
    apiBooksGet(): Observable<void>
    apiBooksGet(opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    apiBooksGet(opts?: OperationOpts): Observable<void | AjaxResponse<void>> {
        return this.request<void>({
            url: '/api/books',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     */
    apiBooksIdDelete({ id }: ApiBooksIdDeleteRequest): Observable<void>
    apiBooksIdDelete({ id }: ApiBooksIdDeleteRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    apiBooksIdDelete({ id }: ApiBooksIdDeleteRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {
        throwIfNullOrUndefined(id, 'id', 'apiBooksIdDelete');

        return this.request<void>({
            url: '/api/books/{id}'.replace('{id}', encodeURI(id)),
            method: 'DELETE',
        }, opts?.responseOpts);
    };

    /**
     */
    apiBooksIdGet({ id }: ApiBooksIdGetRequest): Observable<void>
    apiBooksIdGet({ id }: ApiBooksIdGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    apiBooksIdGet({ id }: ApiBooksIdGetRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {
        throwIfNullOrUndefined(id, 'id', 'apiBooksIdGet');

        return this.request<void>({
            url: '/api/books/{id}'.replace('{id}', encodeURI(id)),
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     */
    apiBooksIdPut({ id, updateBookCommand }: ApiBooksIdPutRequest): Observable<void>
    apiBooksIdPut({ id, updateBookCommand }: ApiBooksIdPutRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    apiBooksIdPut({ id, updateBookCommand }: ApiBooksIdPutRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {
        throwIfNullOrUndefined(id, 'id', 'apiBooksIdPut');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<void>({
            url: '/api/books/{id}'.replace('{id}', encodeURI(id)),
            method: 'PUT',
            headers,
            body: updateBookCommand,
        }, opts?.responseOpts);
    };

    /**
     */
    apiBooksPost({ addBookCommand }: ApiBooksPostRequest): Observable<void>
    apiBooksPost({ addBookCommand }: ApiBooksPostRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    apiBooksPost({ addBookCommand }: ApiBooksPostRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<void>({
            url: '/api/books',
            method: 'POST',
            headers,
            body: addBookCommand,
        }, opts?.responseOpts);
    };

}
